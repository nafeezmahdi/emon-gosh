import { useState } from "react";

export default function PublicationPage() {
  return (
    <>
      <div className="archive">
        <h1 className="page__title">Publications</h1>
        <p>
          <span className="text-black font-georgia">
            Most recent publication updates can be found on my{" "}
            <a
              className="text-[#800080]"
              href="https://scholar.google.com/citations?hl=en&amp;user=GBaSF7MAAAAJ&amp;view_op=list_works&amp;sortby=pubdate"
            >
              <em>[Google Scholar]</em>
            </a>{" "}
            profile.
          </span>
          <br />{" "}
          <span className="text-black font-georgia">
            [*] denotes equal contribution
          </span>
        </p>
        <h2 id="2024">2024</h2>
        <hr />
        <PublicationItem />
        <PublicationItem />
      </div>
    </>
  );
}

function PublicationItem() {
  const [isShow, setIsShow] = useState(false);

  function handleAbs(evnt) {
    evnt.preventDefault();
    setIsShow(!isShow);
  }

  return (
    <>
      <p>
        ðŸ“Œ{" "}
        <a href="https://arxiv.org/pdf/2409.15381">
          <span className="text-blue-400 font-trebuchet">
            <strong>
              Adversarial Attacks on Parts of Speech: An Empirical Study in
              Text-to-Image Generation
            </strong>
          </span>
        </a>{" "}
        (
        <span className="text-red">
          <strong>Core A*</strong>
        </span>
        )<br />{" "}
        <span className="text-black font-trebuchet">
          {" "}
          <font size="3">
            <strong>Authors</strong>:{" "}
            <strong className="text-[008000]">G M Shahariar</strong>, Jia Chen,
            Jiachen Li, Yue Dong
          </font>{" "}
        </span>{" "}
        <br />{" "}
        <span className="text-black font-trebuchet">
          {" "}
          <font size="3">
            <strong>Journal: </strong>
            <em>EMNLP Findings</em>
          </font>{" "}
          (<a href="https://2024.emnlp.org/">EMNLP 2024</a>){" "}
        </span>{" "}
        <br /> [
        <a className="text-[red]" href="#" onClick={handleAbs}>
          <font size="3">Abstract</font>
        </a>
        ] [
        <a href="https://arxiv.org/pdf/2409.15381">
          <span className="text-[red]">
            <font size="3">PDF</font>
          </span>
        </a>
        ] [
        <a href="https://github.com/shahariar-shibli/Adversarial-Attack-on-POS-Tags">
          <span className="text-[red]">
            <font size="3">Code &amp; Dataset</font>
          </span>
        </a>
        ] [
        <a className="text-[red]" href="#">
          <font size="3">Citation bib</font>
        </a>
        ]
      </p>
      <div
        id="emnlp_abstract"
        className={`abstract ${!isShow ? "hidden" : ""}`}
      >
        <p className="text-justify text-black font-monaco">
          {" "}
          <font size="3">
            {" "}
            Recent studies show that text-to-image (T2I) models are vulnerable
            to adversarial attacks, especially with noun perturbations in text
            prompts. In this study, we investigate the impact of adversarial
            attacks on different POS tags within text prompts on the images
            generated by T2I models. We create a high-quality dataset for
            realistic POS tag token swapping and perform gradient-based attacks
            to find adversarial suffixes that mislead T2I models into generating
            images with altered tokens. Our empirical results show that the
            attack success rate (ASR) varies significantly among different POS
            tag categories, with nouns, proper nouns, and adjectives being the
            easiest to attack. We explore the mechanism behind the steering
            effect of adversarial suffixes, finding that the number of critical
            tokens and content fusion vary among POS tags, while features like
            suffix transferability are consistent across categories.{" "}
          </font>
        </p>
      </div>
    </>
  );
}
